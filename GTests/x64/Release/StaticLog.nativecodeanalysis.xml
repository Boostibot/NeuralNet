<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>G_MemoryFunctions.h</FILENAME>
      <LINE>220</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26408</DEFECTCODE>
    <DESCRIPTION>Avoid malloc() and free(), prefer the nothrow version of new with delete (r.10).</DESCRIPTION>
    <FUNCTION>AllocateMemory</FUNCTION>
    <DECORATED>?AllocateMemory@@YAPEAX_K@Z</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>G_MemoryFunctions.h</FILENAME>
      <LINE>218</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'AllocateMemory' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>AllocateMemory</FUNCTION>
    <DECORATED>?AllocateMemory@@YAPEAX_K@Z</DECORATED>
    <FUNCLINE>218</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>55</LINE>
      <COLUMN>110</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@LogWriterInterface@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>55</LINE>
      <COLUMN>135</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@LogWriterInterface@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>55</LINE>
      <COLUMN>148</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@LogWriterInterface@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>55</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'LogWriterInterface::LogCustom' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@LogWriterInterface@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>57</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@LogWriterInterface@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>57</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@LogWriterInterface@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>57</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'LogWriterInterface::SetCustomLogState' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@LogWriterInterface@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>60</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'LogWriterInterface::IsOutputStreamOpen' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::IsOutputStreamOpen</FUNCTION>
    <DECORATED>?IsOutputStreamOpen@LogWriterInterface@@UEAA_NXZ</DECORATED>
    <FUNCLINE>60</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>62</LINE>
      <COLUMN>96</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::OpenOutputStream</FUNCTION>
    <DECORATED>?OpenOutputStream@LogWriterInterface@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@H@Z</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>62</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'LogWriterInterface::OpenOutputStream' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::OpenOutputStream</FUNCTION>
    <DECORATED>?OpenOutputStream@LogWriterInterface@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@H@Z</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>64</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'LogWriterInterface::CloseOutputStream' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::CloseOutputStream</FUNCTION>
    <DECORATED>?CloseOutputStream@LogWriterInterface@@UEAAXXZ</DECORATED>
    <FUNCLINE>64</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>66</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'LogWriterInterface::FlushOutputStream' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::FlushOutputStream</FUNCTION>
    <DECORATED>?FlushOutputStream@LogWriterInterface@@UEAAXXZ</DECORATED>
    <FUNCLINE>66</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>67</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class LogWriterInterface', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::{dtor}</FUNCTION>
    <DECORATED>??1LogWriterInterface@@UEAA@XZ</DECORATED>
    <FUNCLINE>67</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>86</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogMsg' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogMsg</FUNCTION>
    <DECORATED>?LogMsg@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>86</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>86</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogMsg' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogMsg</FUNCTION>
    <DECORATED>?LogMsg@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>86</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>87</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogVar' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogVar</FUNCTION>
    <DECORATED>?LogVar@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>87</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>87</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogVar' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogVar</FUNCTION>
    <DECORATED>?LogVar@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>87</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>88</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogMsgSource' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogMsgSource</FUNCTION>
    <DECORATED>?LogMsgSource@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@I0@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>88</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogMsgSource' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogMsgSource</FUNCTION>
    <DECORATED>?LogMsgSource@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@I0@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogVarSource' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogVarSource</FUNCTION>
    <DECORATED>?LogVarSource@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@I00@Z</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogVarSource' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogVarSource</FUNCTION>
    <DECORATED>?LogVarSource@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@I00@Z</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>91</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsStart' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsStart</FUNCTION>
    <DECORATED>?LogByPartsStart@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>91</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>91</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsStart' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsStart</FUNCTION>
    <DECORATED>?LogByPartsStart@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>91</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>92</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsLvl' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsLvl</FUNCTION>
    <DECORATED>?LogByPartsLvl@DefaultPassiveLogWriter@@UEAAXI@Z</DECORATED>
    <FUNCLINE>92</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>92</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsLvl' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsLvl</FUNCTION>
    <DECORATED>?LogByPartsLvl@DefaultPassiveLogWriter@@UEAAXI@Z</DECORATED>
    <FUNCLINE>92</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>93</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsSource' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsSource</FUNCTION>
    <DECORATED>?LogByPartsSource@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>93</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsSource' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsSource</FUNCTION>
    <DECORATED>?LogByPartsSource@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>94</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsMsg' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsMsg</FUNCTION>
    <DECORATED>?LogByPartsMsg@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>94</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>94</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsMsg' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsMsg</FUNCTION>
    <DECORATED>?LogByPartsMsg@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>94</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>95</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsVar' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsVar</FUNCTION>
    <DECORATED>?LogByPartsVar@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>95</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>95</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsVar' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsVar</FUNCTION>
    <DECORATED>?LogByPartsVar@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>95</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>96</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsFinish' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsFinish</FUNCTION>
    <DECORATED>?LogByPartsFinish@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>96</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>96</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsFinish' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsFinish</FUNCTION>
    <DECORATED>?LogByPartsFinish@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>96</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>98</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::IsPassiveLogger' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::IsPassiveLogger</FUNCTION>
    <DECORATED>?IsPassiveLogger@DefaultPassiveLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>98</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::IsPassiveLogger' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::IsPassiveLogger</FUNCTION>
    <DECORATED>?IsPassiveLogger@DefaultPassiveLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>100</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::IsOutputStreamOpen' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::IsOutputStreamOpen</FUNCTION>
    <DECORATED>?IsOutputStreamOpen@DefaultPassiveLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>100</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>100</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::IsOutputStreamOpen' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::IsOutputStreamOpen</FUNCTION>
    <DECORATED>?IsOutputStreamOpen@DefaultPassiveLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>100</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>101</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::OpenOutputStream' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::OpenOutputStream</FUNCTION>
    <DECORATED>?OpenOutputStream@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@H@Z</DECORATED>
    <FUNCLINE>101</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>101</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::OpenOutputStream' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::OpenOutputStream</FUNCTION>
    <DECORATED>?OpenOutputStream@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@H@Z</DECORATED>
    <FUNCLINE>101</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>102</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::CloseOutputStream' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::CloseOutputStream</FUNCTION>
    <DECORATED>?CloseOutputStream@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>102</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>102</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::CloseOutputStream' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::CloseOutputStream</FUNCTION>
    <DECORATED>?CloseOutputStream@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>102</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>103</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::FlushOutputStream' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::FlushOutputStream</FUNCTION>
    <DECORATED>?FlushOutputStream@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>103</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::FlushOutputStream' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::FlushOutputStream</FUNCTION>
    <DECORATED>?FlushOutputStream@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>104</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26443</DEFECTCODE>
    <DESCRIPTION>Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::{dtor}</FUNCTION>
    <DECORATED>??1DefaultPassiveLogWriter@@UEAA@XZ</DECORATED>
    <FUNCLINE>104</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>104</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class DefaultPassiveLogWriter', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::{dtor}</FUNCTION>
    <DECORATED>??1DefaultPassiveLogWriter@@UEAA@XZ</DECORATED>
    <FUNCLINE>104</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>166</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::{ctor}</FUNCTION>
    <DECORATED>??0DefaultOperativeLogWriter@@QEAA@XZ</DECORATED>
    <FUNCLINE>166</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogMsg' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogMsg</FUNCTION>
    <DECORATED>?LogMsg@DefaultOperativeLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>179</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>186</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogVar' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogVar</FUNCTION>
    <DECORATED>?LogVar@DefaultOperativeLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>186</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>193</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogMsgSource' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogMsgSource</FUNCTION>
    <DECORATED>?LogMsgSource@DefaultOperativeLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@I0@Z</DECORATED>
    <FUNCLINE>193</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>202</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogVarSource' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogVarSource</FUNCTION>
    <DECORATED>?LogVarSource@DefaultOperativeLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@I00@Z</DECORATED>
    <FUNCLINE>202</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>212</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogByPartsStart' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogByPartsStart</FUNCTION>
    <DECORATED>?LogByPartsStart@DefaultOperativeLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>212</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>217</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogByPartsSource' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogByPartsSource</FUNCTION>
    <DECORATED>?LogByPartsSource@DefaultOperativeLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>225</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogByPartsLvl' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogByPartsLvl</FUNCTION>
    <DECORATED>?LogByPartsLvl@DefaultOperativeLogWriter@@UEAAXI@Z</DECORATED>
    <FUNCLINE>225</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>233</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogByPartsMsg' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogByPartsMsg</FUNCTION>
    <DECORATED>?LogByPartsMsg@DefaultOperativeLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>233</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>240</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogByPartsVar' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogByPartsVar</FUNCTION>
    <DECORATED>?LogByPartsVar@DefaultOperativeLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>240</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>247</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogByPartsFinish' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogByPartsFinish</FUNCTION>
    <DECORATED>?LogByPartsFinish@DefaultOperativeLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>247</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>295</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@DefaultOperativeLogWriter@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>295</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@DefaultOperativeLogWriter@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>295</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@DefaultOperativeLogWriter@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>293</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogCustom' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@DefaultOperativeLogWriter@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>293</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogCustom' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@DefaultOperativeLogWriter@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>298</LINE>
      <COLUMN>101</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@DefaultOperativeLogWriter@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>298</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>298</LINE>
      <COLUMN>126</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@DefaultOperativeLogWriter@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>298</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>298</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::SetCustomLogState' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@DefaultOperativeLogWriter@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>298</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>298</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::SetCustomLogState' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@DefaultOperativeLogWriter@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>298</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>343</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::IsPassiveLogger' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::IsPassiveLogger</FUNCTION>
    <DECORATED>?IsPassiveLogger@DefaultOperativeLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>343</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>343</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::IsPassiveLogger' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::IsPassiveLogger</FUNCTION>
    <DECORATED>?IsPassiveLogger@DefaultOperativeLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>343</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>344</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::IsOutputStreamOpen' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::IsOutputStreamOpen</FUNCTION>
    <DECORATED>?IsOutputStreamOpen@DefaultOperativeLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>344</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>348</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::OpenOutputStream' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::OpenOutputStream</FUNCTION>
    <DECORATED>?OpenOutputStream@DefaultOperativeLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@H@Z</DECORATED>
    <FUNCLINE>348</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>352</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::CloseOutputStream' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::CloseOutputStream</FUNCTION>
    <DECORATED>?CloseOutputStream@DefaultOperativeLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>352</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>356</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::FlushOutputStream' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::FlushOutputStream</FUNCTION>
    <DECORATED>?FlushOutputStream@DefaultOperativeLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>356</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>360</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26443</DEFECTCODE>
    <DESCRIPTION>Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::{dtor}</FUNCTION>
    <DECORATED>??1DefaultOperativeLogWriter@@UEAA@XZ</DECORATED>
    <FUNCLINE>360</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>360</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class DefaultOperativeLogWriter', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::{dtor}</FUNCTION>
    <DECORATED>??1DefaultOperativeLogWriter@@UEAA@XZ</DECORATED>
    <FUNCLINE>360</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>360</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'TearDown()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::{dtor}</FUNCTION>
    <DECORATED>??1DefaultOperativeLogWriter@@UEAA@XZ</DECORATED>
    <FUNCLINE>360</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>371</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'str': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::AddFormatedDate</FUNCTION>
    <DECORATED>?AddFormatedDate@DefaultOperativeLogWriter@@AEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>365</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>373</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'str': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::AddFormatedDate</FUNCTION>
    <DECORATED>?AddFormatedDate@DefaultOperativeLogWriter@@AEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>365</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::ResetString' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::ResetString</FUNCTION>
    <DECORATED>?ResetString@DefaultOperativeLogWriter@@AEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>435</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>479</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::IncrementEntryIndex' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::IncrementEntryIndex</FUNCTION>
    <DECORATED>?IncrementEntryIndex@DefaultOperativeLogWriter@@AEAAXXZ</DECORATED>
    <FUNCLINE>479</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogDataInterpret.h</FILENAME>
      <LINE>81</LINE>
      <COLUMN>126</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>DefaultDataInterpret::InetrpretArg</FUNCTION>
    <DECORATED>?InetrpretArg@DefaultDataInterpret@@QEAAXPEAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>81</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_CrtpOverloading_Test@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::Logger_CrtpOverloading_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_CrtpOverloading_Test@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::Logger_CrtpOverloading_Test&gt;::TestFactoryImpl&lt;StaticLogger::Logger_CrtpOverloading_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::Logger_CrtpOverloading_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_CrtpOverloading_Test@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::Logger_CrtpOverloading_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_CrtpOverloading_Test@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::Logger_CrtpOverloading_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_CrtpOverloading_Test@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::Logger_CrtpOverloading_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_CrtpOverloading_Test@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::Logger_CrtpOverloading_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_CrtpOverloading_Test@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>11</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>15</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>17</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>19</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>7</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::Logger_CrtpOverloading_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>11</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>15</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>16</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>17</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>18</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>19</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger_CrtpOverloading_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CrtpOverloading_Test@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>7</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_WriteMsgs_Test@LoggerFunctionCalling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_WriteMsgs_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_WriteMsgs_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_WriteMsgs_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_WriteMsgs_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_WriteMsgs_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_WriteMsgs_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>37</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_WriteMsgs_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>33</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_WriteMsgs_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>37</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_WriteMsgs_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>33</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_WriteVars_Test@LoggerFunctionCalling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_WriteVars_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_WriteVars_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_WriteVars_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_WriteVars_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_WriteVars_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_WriteVars_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>45</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_WriteVars_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_WriteVars_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>45</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_WriteVars_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>57</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>58</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'lineNum' is assigned only once, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>56</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>57</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>58</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>48</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>61</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_AppendTags_Test@LoggerFunctionCalling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>61</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_AppendTags_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>61</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_AppendTags_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>61</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_AppendTags_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>61</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_AppendTags_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>61</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_AppendTags_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>61</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_AppendTags_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>61</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>66</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_AppendTags_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>61</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_AppendTags_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>66</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_AppendTags_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>61</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>73</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>69</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>73</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>75</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>69</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>85</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>83</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>85</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>86</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>79</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>89</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>89</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>89</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>89</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>89</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>89</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>89</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>89</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>94</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>95</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>98</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>100</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>89</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>94</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>95</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>98</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>100</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>103</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_FlushStream_Test@LoggerFunctionCalling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>103</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_FlushStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>103</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_FlushStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>103</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_FlushStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>103</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_FlushStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>103</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_FlushStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>103</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_FlushStream_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>103</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>107</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_FlushStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>103</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_FlushStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>107</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_FlushStream_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_OnConstruction_Test@LoggerFunctionCalling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>110</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OnConstruction_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>110</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OnConstruction_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>110</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OnConstruction_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>110</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OnConstruction_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>110</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OnConstruction_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>110</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OnConstruction_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>110</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>114</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_OnConstruction_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>110</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>110</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_OnConstruction_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>110</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>114</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_OnConstruction_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>110</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_OnDestruction_Test@LoggerFunctionCalling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OnDestruction_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OnDestruction_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OnDestruction_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OnDestruction_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OnDestruction_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_OnDestruction_Test@LoggerFunctionCalling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>126</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_OnDestruction_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_OnDestruction_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>126</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_OnDestruction_Test@LoggerFunctionCalling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>117</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>137</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>138</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>139</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>137</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>138</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>139</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>144</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>146</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>141</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>144</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>146</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>141</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_DoLog_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_DoLog_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>151</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>153</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>155</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>151</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>153</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>155</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>148</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>160</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>164</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>166</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>160</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>164</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>166</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>157</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>171</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>173</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>175</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>171</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>173</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>175</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>168</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>178</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>178</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>178</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>178</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>178</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>178</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>178</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>178</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>184</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>189</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>194</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>200</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>201</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>202</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>205</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>206</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>207</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>211</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>212</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>213</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>218</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>219</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>220</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>223</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>225</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>226</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>227</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>178</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>184</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>189</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>194</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>200</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>201</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>202</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>205</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>206</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>207</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>211</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>212</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>213</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>218</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>219</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>220</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>223</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>225</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>226</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>227</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>178</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>229</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>229</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>229</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test&gt;::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>229</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>229</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>229</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>229</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>229</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>234</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>235</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>236</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>237</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>238</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>240</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>244</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>245</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>246</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>247</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>248</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>250</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>254</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>255</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>256</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>257</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>258</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>260</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>266</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>267</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>268</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>271</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>272</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>273</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>277</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>278</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>279</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>285</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>286</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>287</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>229</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>234</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>235</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>236</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>237</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>238</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>240</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>244</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>245</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>246</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>247</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>248</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>250</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>254</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>255</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>256</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>257</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>258</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>260</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>266</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>267</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>268</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>271</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>272</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>273</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>277</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>278</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>279</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>285</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>286</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>StaticLog.cpp</FILENAME>
      <LINE>287</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>229</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelTemplate_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_LogLevels_LevelTemplate_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_LogLevels_LevelArgument_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_LogLevels_LevelArgument_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_DisableLog_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_DisableLog_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_EnableLog_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_EnableLog_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_DoLog_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_DoLog_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_DoLog_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_DoLog_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_DoLog_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_IsLogEnabled_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_IsLogEnabled_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerLogEnabling::Logger_IsLevelInRange_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_IsLevelInRange_Test@LoggerLogEnabling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_OnDestruction_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OnDestruction_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_OnDestruction_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_OnConstruction_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OnConstruction_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_OnConstruction_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_FlushStream_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_FlushStream_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_FlushStream_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_IsStreamOpen_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_IsStreamOpen_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_CloseStream_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_CloseStream_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_OpenStream_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_OpenStream_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_AppendTags_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_AppendTags_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_AppendTags_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_AppendSource_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_AppendSource_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_WriteVars_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_WriteVars_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_WriteVars_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_WriteMsgs_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::LoggerFunctionCalling::Logger_WriteMsgs_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_WriteMsgs_Test@LoggerFunctionCalling@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::Logger_CrtpOverloading_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_CrtpOverloading_Test@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;StaticLogger::Logger_CrtpOverloading_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;StaticLogger::Logger_CrtpOverloading_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_CrtpOverloading_Test@StaticLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>112</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class StaticLogger::Logger&lt;struct StaticLogger::StaticLogTesting::TestingLogger2,struct StaticLogger::StaticLogTesting::TestingDataPackage2&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger2,StaticLogger::StaticLogTesting::TestingDataPackage2&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$Logger@UTestingLogger2@StaticLogTesting@StaticLogger@@UTestingDataPackage2@23@@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>112</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>114</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'GetWriter()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger2,StaticLogger::StaticLogTesting::TestingDataPackage2&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$Logger@UTestingLogger2@StaticLogTesting@StaticLogger@@UTestingDataPackage2@23@@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>112</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>114</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'OnDestruction()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger2,StaticLogger::StaticLogTesting::TestingDataPackage2&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$Logger@UTestingLogger2@StaticLogTesting@StaticLogger@@UTestingDataPackage2@23@@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>112</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>107</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger2,StaticLogger::StaticLogTesting::TestingDataPackage2&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Logger@UTestingLogger2@StaticLogTesting@StaticLogger@@UTestingDataPackage2@23@@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>107</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>222</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::IsLogEnabled' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::IsLogEnabled</FUNCTION>
    <DECORATED>?IsLogEnabled@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEBA_NXZ</DECORATED>
    <FUNCLINE>222</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::DoLog' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::DoLog</FUNCTION>
    <DECORATED>?DoLog@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEAAX_N@Z</DECORATED>
    <FUNCLINE>184</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>112</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class StaticLogger::Logger&lt;struct StaticLogger::StaticLogTesting::TestingLogger1,struct StaticLogger::StaticLogTesting::TestingDataPackage1&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>112</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>114</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'GetWriter()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>112</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>114</LINE>
      <COLUMN>41</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'OnDestruction()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::{dtor}</FUNCTION>
    <DECORATED>??1?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>112</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>107</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>107</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>104</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger2,StaticLogger::StaticLogTesting::TestingDataPackage2&gt;::GetWriter' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger2,StaticLogger::StaticLogTesting::TestingDataPackage2&gt;::GetWriter</FUNCTION>
    <DECORATED>?GetWriter@?$Logger@UTestingLogger2@StaticLogTesting@StaticLogger@@UTestingDataPackage2@23@@StaticLogger@@QEAAAEAUTestingLogger2@StaticLogTesting@2@XZ</DECORATED>
    <FUNCLINE>104</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::IsLogEnabledInternal</FUNCTION>
    <DECORATED>?IsLogEnabledInternal@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@AEBA_NI@Z</DECORATED>
    <FUNCLINE>252</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::IsLogEnabledInternal</FUNCTION>
    <DECORATED>?IsLogEnabledInternal@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@AEBA_NI@Z</DECORATED>
    <FUNCLINE>252</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>104</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::GetWriter' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::GetWriter</FUNCTION>
    <DECORATED>?GetWriter@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEAAAEAUTestingLogger1@StaticLogTesting@2@XZ</DECORATED>
    <FUNCLINE>104</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>235</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::IsLogEnabled</FUNCTION>
    <DECORATED>??$IsLogEnabled@$0A@@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEBA_NXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>235</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::IsLogEnabled</FUNCTION>
    <DECORATED>??$IsLogEnabled@$00@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEBA_NXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>235</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::IsLogEnabled</FUNCTION>
    <DECORATED>??$IsLogEnabled@$01@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEBA_NXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>235</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::IsLogEnabled</FUNCTION>
    <DECORATED>??$IsLogEnabled@$02@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEBA_NXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>235</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::IsLogEnabled</FUNCTION>
    <DECORATED>??$IsLogEnabled@$03@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEBA_NXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>235</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::IsLogEnabled</FUNCTION>
    <DECORATED>??$IsLogEnabled@$0P@@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEBA_NXZ</DECORATED>
    <FUNCLINE>232</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>202</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::DoLoggingLevels</FUNCTION>
    <DECORATED>??$DoLoggingLevels@$0A@$01$02$02@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEAAX_N@Z</DECORATED>
    <FUNCLINE>198</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>202</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::DoLoggingLevels</FUNCTION>
    <DECORATED>??$DoLoggingLevels@$02$01$0A@$0A@@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@QEAAX_N@Z</DECORATED>
    <FUNCLINE>198</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>G_MemoryFunctions.h</FILENAME>
      <LINE>15</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26473</DEFECTCODE>
    <DESCRIPTION>Don't cast between pointer types where the source type and the target type are the same (type.1).</DESCRIPTION>
    <FUNCTION>SetMemory</FUNCTION>
    <DECORATED>??$SetMemory@PEAX$0A@@@YAXPEAX_KH@Z</DECORATED>
    <FUNCLINE>13</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>G_MemoryFunctions.h</FILENAME>
      <LINE>13</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'SetMemory&lt;void * __ptr64,0&gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>SetMemory</FUNCTION>
    <DECORATED>??$SetMemory@PEAX$0A@@@YAXPEAX_KH@Z</DECORATED>
    <FUNCLINE>13</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>262</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::DoLoggingLevelInternal</FUNCTION>
    <DECORATED>?DoLoggingLevelInternal@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@AEAAXI_N@Z</DECORATED>
    <FUNCLINE>260</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>262</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::DoLoggingLevelInternal</FUNCTION>
    <DECORATED>?DoLoggingLevelInternal@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@AEAAXI_N@Z</DECORATED>
    <FUNCLINE>260</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>260</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::DoLoggingLevelInternal' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::DoLoggingLevelInternal</FUNCTION>
    <DECORATED>?DoLoggingLevelInternal@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@AEAAXI_N@Z</DECORATED>
    <FUNCLINE>260</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>299</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::UnravelAndCheckLevel_Throw' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::UnravelAndCheckLevel_Throw</FUNCTION>
    <DECORATED>?UnravelAndCheckLevel_Throw@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@AEAAXXZ</DECORATED>
    <FUNCLINE>299</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>281</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::UnravelAndSetLoggingLevel' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::UnravelAndSetLoggingLevel</FUNCTION>
    <DECORATED>?UnravelAndSetLoggingLevel@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@AEAAX_N@Z</DECORATED>
    <FUNCLINE>281</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>StaticLog.h</FILENAME>
      <LINE>273</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::UnravelAndSetLoggingLevel&lt;1&gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>StaticLogger::Logger&lt;StaticLogger::StaticLogTesting::TestingLogger1,StaticLogger::StaticLogTesting::TestingDataPackage1&gt;::UnravelAndSetLoggingLevel</FUNCTION>
    <DECORATED>??$UnravelAndSetLoggingLevel@$00@?$Logger@UTestingLogger1@StaticLogTesting@StaticLogger@@UTestingDataPackage1@23@@StaticLogger@@AEAAX_N@Z</DECORATED>
    <FUNCLINE>273</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\</FILEPATH>
      <FILENAME>gtest-printers.h</FILENAME>
      <LINE>260</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'os' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>testing_internal::DefaultPrintNonContainerTo</FUNCTION>
    <DECORATED>??$DefaultPrintNonContainerTo@I@testing_internal@@YAXAEBIPEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>260</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\</FILEPATH>
      <FILENAME>gtest-printers.h</FILENAME>
      <LINE>260</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'os' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>testing_internal::DefaultPrintNonContainerTo</FUNCTION>
    <DECORATED>??$DefaultPrintNonContainerTo@H@testing_internal@@YAXAEBHPEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>260</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>