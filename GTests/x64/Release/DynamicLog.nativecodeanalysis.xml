<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>55</LINE>
      <COLUMN>110</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@LogWriterInterface@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>55</LINE>
      <COLUMN>135</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@LogWriterInterface@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>55</LINE>
      <COLUMN>148</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@LogWriterInterface@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>55</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'LogWriterInterface::LogCustom' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@LogWriterInterface@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>57</LINE>
      <COLUMN>98</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@LogWriterInterface@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>57</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@LogWriterInterface@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>57</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'LogWriterInterface::SetCustomLogState' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@LogWriterInterface@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>57</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>60</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'LogWriterInterface::IsOutputStreamOpen' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::IsOutputStreamOpen</FUNCTION>
    <DECORATED>?IsOutputStreamOpen@LogWriterInterface@@UEAA_NXZ</DECORATED>
    <FUNCLINE>60</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>62</LINE>
      <COLUMN>96</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::OpenOutputStream</FUNCTION>
    <DECORATED>?OpenOutputStream@LogWriterInterface@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@H@Z</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>62</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'LogWriterInterface::OpenOutputStream' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::OpenOutputStream</FUNCTION>
    <DECORATED>?OpenOutputStream@LogWriterInterface@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@H@Z</DECORATED>
    <FUNCLINE>62</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>64</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'LogWriterInterface::CloseOutputStream' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::CloseOutputStream</FUNCTION>
    <DECORATED>?CloseOutputStream@LogWriterInterface@@UEAAXXZ</DECORATED>
    <FUNCLINE>64</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>66</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'LogWriterInterface::FlushOutputStream' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::FlushOutputStream</FUNCTION>
    <DECORATED>?FlushOutputStream@LogWriterInterface@@UEAAXXZ</DECORATED>
    <FUNCLINE>66</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>67</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class LogWriterInterface', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>LogWriterInterface::{dtor}</FUNCTION>
    <DECORATED>??1LogWriterInterface@@UEAA@XZ</DECORATED>
    <FUNCLINE>67</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>86</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogMsg' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogMsg</FUNCTION>
    <DECORATED>?LogMsg@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>86</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>86</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogMsg' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogMsg</FUNCTION>
    <DECORATED>?LogMsg@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>86</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>87</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogVar' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogVar</FUNCTION>
    <DECORATED>?LogVar@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>87</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>87</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogVar' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogVar</FUNCTION>
    <DECORATED>?LogVar@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>87</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>88</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogMsgSource' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogMsgSource</FUNCTION>
    <DECORATED>?LogMsgSource@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@I0@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>88</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogMsgSource' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogMsgSource</FUNCTION>
    <DECORATED>?LogMsgSource@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@I0@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogVarSource' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogVarSource</FUNCTION>
    <DECORATED>?LogVarSource@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@I00@Z</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogVarSource' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogVarSource</FUNCTION>
    <DECORATED>?LogVarSource@DefaultPassiveLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@I00@Z</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>91</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsStart' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsStart</FUNCTION>
    <DECORATED>?LogByPartsStart@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>91</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>91</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsStart' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsStart</FUNCTION>
    <DECORATED>?LogByPartsStart@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>91</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>92</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsLvl' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsLvl</FUNCTION>
    <DECORATED>?LogByPartsLvl@DefaultPassiveLogWriter@@UEAAXI@Z</DECORATED>
    <FUNCLINE>92</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>92</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsLvl' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsLvl</FUNCTION>
    <DECORATED>?LogByPartsLvl@DefaultPassiveLogWriter@@UEAAXI@Z</DECORATED>
    <FUNCLINE>92</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>93</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsSource' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsSource</FUNCTION>
    <DECORATED>?LogByPartsSource@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>93</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsSource' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsSource</FUNCTION>
    <DECORATED>?LogByPartsSource@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>94</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsMsg' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsMsg</FUNCTION>
    <DECORATED>?LogByPartsMsg@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>94</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>94</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsMsg' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsMsg</FUNCTION>
    <DECORATED>?LogByPartsMsg@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>94</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>95</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsVar' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsVar</FUNCTION>
    <DECORATED>?LogByPartsVar@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>95</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>95</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsVar' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsVar</FUNCTION>
    <DECORATED>?LogByPartsVar@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>95</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>96</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsFinish' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsFinish</FUNCTION>
    <DECORATED>?LogByPartsFinish@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>96</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>96</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::LogByPartsFinish' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::LogByPartsFinish</FUNCTION>
    <DECORATED>?LogByPartsFinish@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>96</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>98</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::IsPassiveLogger' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::IsPassiveLogger</FUNCTION>
    <DECORATED>?IsPassiveLogger@DefaultPassiveLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>98</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::IsPassiveLogger' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::IsPassiveLogger</FUNCTION>
    <DECORATED>?IsPassiveLogger@DefaultPassiveLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>98</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>100</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::IsOutputStreamOpen' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::IsOutputStreamOpen</FUNCTION>
    <DECORATED>?IsOutputStreamOpen@DefaultPassiveLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>100</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>100</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::IsOutputStreamOpen' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::IsOutputStreamOpen</FUNCTION>
    <DECORATED>?IsOutputStreamOpen@DefaultPassiveLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>100</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>101</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::OpenOutputStream' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::OpenOutputStream</FUNCTION>
    <DECORATED>?OpenOutputStream@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@H@Z</DECORATED>
    <FUNCLINE>101</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>101</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::OpenOutputStream' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::OpenOutputStream</FUNCTION>
    <DECORATED>?OpenOutputStream@DefaultPassiveLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@H@Z</DECORATED>
    <FUNCLINE>101</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>102</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::CloseOutputStream' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::CloseOutputStream</FUNCTION>
    <DECORATED>?CloseOutputStream@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>102</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>102</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::CloseOutputStream' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::CloseOutputStream</FUNCTION>
    <DECORATED>?CloseOutputStream@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>102</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>103</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::FlushOutputStream' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::FlushOutputStream</FUNCTION>
    <DECORATED>?FlushOutputStream@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>103</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultPassiveLogWriter::FlushOutputStream' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::FlushOutputStream</FUNCTION>
    <DECORATED>?FlushOutputStream@DefaultPassiveLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>103</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>104</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26443</DEFECTCODE>
    <DESCRIPTION>Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::{dtor}</FUNCTION>
    <DECORATED>??1DefaultPassiveLogWriter@@UEAA@XZ</DECORATED>
    <FUNCLINE>104</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>104</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class DefaultPassiveLogWriter', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>DefaultPassiveLogWriter::{dtor}</FUNCTION>
    <DECORATED>??1DefaultPassiveLogWriter@@UEAA@XZ</DECORATED>
    <FUNCLINE>104</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>166</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::{ctor}</FUNCTION>
    <DECORATED>??0DefaultOperativeLogWriter@@QEAA@XZ</DECORATED>
    <FUNCLINE>166</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogMsg' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogMsg</FUNCTION>
    <DECORATED>?LogMsg@DefaultOperativeLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>179</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>186</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogVar' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogVar</FUNCTION>
    <DECORATED>?LogVar@DefaultOperativeLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>186</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>193</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogMsgSource' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogMsgSource</FUNCTION>
    <DECORATED>?LogMsgSource@DefaultOperativeLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@I0@Z</DECORATED>
    <FUNCLINE>193</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>202</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogVarSource' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogVarSource</FUNCTION>
    <DECORATED>?LogVarSource@DefaultOperativeLogWriter@@UEAAXIV?$basic_string_view@DU?$char_traits@D@std@@@std@@I00@Z</DECORATED>
    <FUNCLINE>202</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>212</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogByPartsStart' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogByPartsStart</FUNCTION>
    <DECORATED>?LogByPartsStart@DefaultOperativeLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>212</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>217</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogByPartsSource' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogByPartsSource</FUNCTION>
    <DECORATED>?LogByPartsSource@DefaultOperativeLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@I@Z</DECORATED>
    <FUNCLINE>217</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>225</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogByPartsLvl' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogByPartsLvl</FUNCTION>
    <DECORATED>?LogByPartsLvl@DefaultOperativeLogWriter@@UEAAXI@Z</DECORATED>
    <FUNCLINE>225</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>233</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogByPartsMsg' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogByPartsMsg</FUNCTION>
    <DECORATED>?LogByPartsMsg@DefaultOperativeLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@@Z</DECORATED>
    <FUNCLINE>233</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>240</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogByPartsVar' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogByPartsVar</FUNCTION>
    <DECORATED>?LogByPartsVar@DefaultOperativeLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@0@Z</DECORATED>
    <FUNCLINE>240</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>247</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogByPartsFinish' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogByPartsFinish</FUNCTION>
    <DECORATED>?LogByPartsFinish@DefaultOperativeLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>247</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>295</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@DefaultOperativeLogWriter@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>295</LINE>
      <COLUMN>37</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@DefaultOperativeLogWriter@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>295</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@DefaultOperativeLogWriter@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>293</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogCustom' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@DefaultOperativeLogWriter@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>293</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::LogCustom' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::LogCustom</FUNCTION>
    <DECORATED>?LogCustom@DefaultOperativeLogWriter@@UEAAXHIPEAX@Z</DECORATED>
    <FUNCLINE>293</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>298</LINE>
      <COLUMN>101</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@DefaultOperativeLogWriter@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>298</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>298</LINE>
      <COLUMN>126</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@DefaultOperativeLogWriter@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>298</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>298</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::SetCustomLogState' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@DefaultOperativeLogWriter@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>298</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>298</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::SetCustomLogState' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::SetCustomLogState</FUNCTION>
    <DECORATED>?SetCustomLogState@DefaultOperativeLogWriter@@UEAAXHPEAX@Z</DECORATED>
    <FUNCLINE>298</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>343</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::IsPassiveLogger' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::IsPassiveLogger</FUNCTION>
    <DECORATED>?IsPassiveLogger@DefaultOperativeLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>343</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>343</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::IsPassiveLogger' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::IsPassiveLogger</FUNCTION>
    <DECORATED>?IsPassiveLogger@DefaultOperativeLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>343</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>344</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::IsOutputStreamOpen' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::IsOutputStreamOpen</FUNCTION>
    <DECORATED>?IsOutputStreamOpen@DefaultOperativeLogWriter@@UEAA_NXZ</DECORATED>
    <FUNCLINE>344</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>348</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::OpenOutputStream' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::OpenOutputStream</FUNCTION>
    <DECORATED>?OpenOutputStream@DefaultOperativeLogWriter@@UEAAXV?$basic_string_view@DU?$char_traits@D@std@@@std@@H@Z</DECORATED>
    <FUNCLINE>348</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>352</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::CloseOutputStream' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::CloseOutputStream</FUNCTION>
    <DECORATED>?CloseOutputStream@DefaultOperativeLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>352</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>356</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::FlushOutputStream' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::FlushOutputStream</FUNCTION>
    <DECORATED>?FlushOutputStream@DefaultOperativeLogWriter@@UEAAXXZ</DECORATED>
    <FUNCLINE>356</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>360</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26443</DEFECTCODE>
    <DESCRIPTION>Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::{dtor}</FUNCTION>
    <DECORATED>??1DefaultOperativeLogWriter@@UEAA@XZ</DECORATED>
    <FUNCLINE>360</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>360</LINE>
      <COLUMN>17</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class DefaultOperativeLogWriter', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::{dtor}</FUNCTION>
    <DECORATED>??1DefaultOperativeLogWriter@@UEAA@XZ</DECORATED>
    <FUNCLINE>360</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>360</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26447</DEFECTCODE>
    <DESCRIPTION>The function is declared 'noexcept' but calls function 'TearDown()' which may throw exceptions (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::{dtor}</FUNCTION>
    <DECORATED>??1DefaultOperativeLogWriter@@UEAA@XZ</DECORATED>
    <FUNCLINE>360</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>371</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'str': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::AddFormatedDate</FUNCTION>
    <DECORATED>?AddFormatedDate@DefaultOperativeLogWriter@@AEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>365</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>373</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'str': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::AddFormatedDate</FUNCTION>
    <DECORATED>?AddFormatedDate@DefaultOperativeLogWriter@@AEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>365</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::ResetString' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::ResetString</FUNCTION>
    <DECORATED>?ResetString@DefaultOperativeLogWriter@@AEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>435</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogWriter.h</FILENAME>
      <LINE>479</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'DefaultOperativeLogWriter::IncrementEntryIndex' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DefaultOperativeLogWriter::IncrementEntryIndex</FUNCTION>
    <DECORATED>?IncrementEntryIndex@DefaultOperativeLogWriter@@AEAAXXZ</DECORATED>
    <FUNCLINE>479</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>LogDataInterpret.h</FILENAME>
      <LINE>81</LINE>
      <COLUMN>126</COLUMN>
    </SFA>
    <DEFECTCODE>26490</DEFECTCODE>
    <DESCRIPTION>Don't use reinterpret_cast (type.1).</DESCRIPTION>
    <FUNCTION>DefaultDataInterpret::InetrpretArg</FUNCTION>
    <DECORATED>?InetrpretArg@DefaultDataInterpret@@QEAAXPEAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>81</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>6</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_DoLogginglevels_Test@DynamicLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>6</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_DoLogginglevels_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLogginglevels_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>6</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_DoLogginglevels_Test&gt;::TestFactoryImpl&lt;DynamicLogger::Logger_DoLogginglevels_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_DoLogginglevels_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLogginglevels_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>6</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_DoLogginglevels_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLogginglevels_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>6</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_DoLogginglevels_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLogginglevels_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>6</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_DoLogginglevels_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLogginglevels_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>6</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_DoLogginglevels_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLogginglevels_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>6</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>11</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>14</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>20</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>21</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>25</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>38</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>43</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>44</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>45</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>49</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>54</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>57</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>58</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>59</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>62</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>63</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>64</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>67</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>68</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>70</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>6</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DynamicLogger::Logger_DoLogginglevels_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>11</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>12</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>14</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>20</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>21</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>25</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>26</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>30</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>31</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>35</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>38</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>43</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>44</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>45</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>48</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>49</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>50</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>53</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>54</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>57</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>58</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>59</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>62</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>63</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>64</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>67</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>68</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>70</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLogginglevels_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLogginglevels_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_DoLog_Test@DynamicLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_DoLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLog_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_DoLog_Test&gt;::TestFactoryImpl&lt;DynamicLogger::Logger_DoLog_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_DoLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLog_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_DoLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLog_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_DoLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLog_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_DoLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLog_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_DoLog_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_DoLog_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>78</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>82</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>85</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>88</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>91</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>94</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>74</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DynamicLogger::Logger_DoLog_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>78</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>79</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>82</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>85</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>88</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>91</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>94</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_DoLog_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_DoLog_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>74</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>97</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_Construction_Test@DynamicLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>97</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_Construction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_Construction_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>97</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_Construction_Test&gt;::TestFactoryImpl&lt;DynamicLogger::Logger_Construction_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_Construction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_Construction_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>97</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_Construction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_Construction_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>97</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_Construction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_Construction_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>97</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_Construction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_Construction_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>97</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_Construction_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_Construction_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>97</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>101</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>103</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>104</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>106</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>107</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>111</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>112</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>115</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>116</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>118</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>119</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>120</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>123</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>124</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>125</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>126</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>97</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DynamicLogger::Logger_Construction_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>101</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>103</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>104</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>106</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>107</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>111</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>112</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>115</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>116</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>117</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>118</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>119</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>120</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>123</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>124</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>125</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>126</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_Construction_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_Construction_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>97</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>131</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_StaticFunctions_Test@DynamicLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>131</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_StaticFunctions_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_StaticFunctions_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>131</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_StaticFunctions_Test&gt;::TestFactoryImpl&lt;DynamicLogger::Logger_StaticFunctions_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_StaticFunctions_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_StaticFunctions_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>131</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_StaticFunctions_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_StaticFunctions_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>131</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_StaticFunctions_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_StaticFunctions_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>131</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_StaticFunctions_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_StaticFunctions_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>131</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_StaticFunctions_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_StaticFunctions_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>131</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>136</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>137</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>139</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>140</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>144</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>147</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>150</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>151</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>155</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>158</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>159</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>131</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DynamicLogger::Logger_StaticFunctions_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>136</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>137</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>139</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>140</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>144</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>147</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>148</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>150</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>151</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>155</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>157</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>158</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>159</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_StaticFunctions_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_StaticFunctions_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::{ctor}</FUNCTION>
    <DECORATED>??0Logger_PointerGettingSetting_Test@DynamicLogger@@QEAA@XZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'operator new' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_PointerGettingSetting_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_PointerGettingSetting_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_PointerGettingSetting_Test&gt;::TestFactoryImpl&lt;DynamicLogger::Logger_PointerGettingSetting_Test&gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_PointerGettingSetting_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_PointerGettingSetting_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_PointerGettingSetting_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_PointerGettingSetting_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_PointerGettingSetting_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_PointerGettingSetting_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_PointerGettingSetting_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_PointerGettingSetting_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26426</DEFECTCODE>
    <DESCRIPTION>Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22).</DESCRIPTION>
    <FUNCTION>`dynamic initializer for 'DynamicLogger::Logger_PointerGettingSetting_Test::test_info_''</FUNCTION>
    <DECORATED>??__E?test_info_@Logger_PointerGettingSetting_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>170</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>171</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>173</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>174</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>183</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>186</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>187</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>188</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>191</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>198</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>201</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>206</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>209</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>214</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>217</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>224</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>225</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>230</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>231</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>237</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>238</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>6326</DEFECTCODE>
    <DESCRIPTION>Potential comparison of a constant with another constant.</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>180</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26462</DEFECTCODE>
    <DESCRIPTION>The value pointed to by 'location1' is assigned only once, mark it as a pointer to const (con.4).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>181</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26462</DEFECTCODE>
    <DESCRIPTION>The value pointed to by 'location2' is assigned only once, mark it as a pointer to const (con.4).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'DynamicLogger::Logger_PointerGettingSetting_Test::TestBody' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>170</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>171</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>173</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>174</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>183</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>186</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>187</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>188</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>191</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>198</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>201</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>206</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>209</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>214</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>217</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>224</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>225</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>230</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>231</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>237</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\</FILEPATH>
      <FILENAME>DynamicLog.cpp</FILENAME>
      <LINE>238</LINE>
      <COLUMN>3</COLUMN>
    </SFA>
    <DEFECTCODE>26818</DEFECTCODE>
    <DESCRIPTION>Switch statement does not cover all cases. Consider adding a 'default' label (es.79).</DESCRIPTION>
    <FUNCTION>DynamicLogger::Logger_PointerGettingSetting_Test::TestBody</FUNCTION>
    <DECORATED>?TestBody@Logger_PointerGettingSetting_Test@DynamicLogger@@EEAAXXZ</DECORATED>
    <FUNCLINE>162</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_PointerGettingSetting_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_PointerGettingSetting_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_PointerGettingSetting_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_PointerGettingSetting_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_PointerGettingSetting_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_StaticFunctions_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_StaticFunctions_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_StaticFunctions_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_StaticFunctions_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_StaticFunctions_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_Construction_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_Construction_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_Construction_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_Construction_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_Construction_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_DoLog_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_DoLog_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_DoLog_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_DoLog_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_DoLog_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>489</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Logger&lt;DefaultDataInterpret&gt;::GetPassiveLogWriter' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::GetPassiveLogWriter</FUNCTION>
    <DECORATED>?GetPassiveLogWriter@?$Logger@VDefaultDataInterpret@@@@QEBAPEAVLogWriterInterface@@XZ</DECORATED>
    <FUNCLINE>489</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>487</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Logger&lt;DefaultDataInterpret&gt;::GetOperativeLogWriter' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::GetOperativeLogWriter</FUNCTION>
    <DECORATED>?GetOperativeLogWriter@?$Logger@VDefaultDataInterpret@@@@QEBAPEAVLogWriterInterface@@XZ</DECORATED>
    <FUNCLINE>487</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>248</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::IsLoggingLevelEnabled</FUNCTION>
    <DECORATED>?IsLoggingLevelEnabled@?$Logger@VDefaultDataInterpret@@@@QEBA_NI@Z</DECORATED>
    <FUNCLINE>244</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>248</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::IsLoggingLevelEnabled</FUNCTION>
    <DECORATED>?IsLoggingLevelEnabled@?$Logger@VDefaultDataInterpret@@@@QEBA_NI@Z</DECORATED>
    <FUNCLINE>244</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>242</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Logger&lt;DefaultDataInterpret&gt;::IsLoggingEnabled' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::IsLoggingEnabled</FUNCTION>
    <DECORATED>?IsLoggingEnabled@?$Logger@VDefaultDataInterpret@@@@QEBA_NXZ</DECORATED>
    <FUNCLINE>242</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>234</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::DoLoggingLevel</FUNCTION>
    <DECORATED>?DoLoggingLevel@?$Logger@VDefaultDataInterpret@@@@QEAAXI_N@Z</DECORATED>
    <FUNCLINE>230</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>236</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::DoLoggingLevel</FUNCTION>
    <DECORATED>?DoLoggingLevel@?$Logger@VDefaultDataInterpret@@@@QEAAXI_N@Z</DECORATED>
    <FUNCLINE>230</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>238</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::DoLoggingLevel</FUNCTION>
    <DECORATED>?DoLoggingLevel@?$Logger@VDefaultDataInterpret@@@@QEAAXI_N@Z</DECORATED>
    <FUNCLINE>230</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>234</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::DoLoggingLevel</FUNCTION>
    <DECORATED>?DoLoggingLevel@?$Logger@VDefaultDataInterpret@@@@QEAAXI_N@Z</DECORATED>
    <FUNCLINE>230</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>236</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::DoLoggingLevel</FUNCTION>
    <DECORATED>?DoLoggingLevel@?$Logger@VDefaultDataInterpret@@@@QEAAXI_N@Z</DECORATED>
    <FUNCLINE>230</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>238</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::DoLoggingLevel</FUNCTION>
    <DECORATED>?DoLoggingLevel@?$Logger@VDefaultDataInterpret@@@@QEAAXI_N@Z</DECORATED>
    <FUNCLINE>230</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>41</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Logger@VDefaultDataInterpret@@@@QEAA@XZ</DECORATED>
    <FUNCLINE>41</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_DoLogginglevels_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_DoLogginglevels_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-internal.h</FILENAME>
      <LINE>472</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26433</DEFECTCODE>
    <DESCRIPTION>Function 'testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_DoLogginglevels_Test&gt;::CreateTest' should be marked with 'override' (c.128).</DESCRIPTION>
    <FUNCTION>testing::internal::TestFactoryImpl&lt;DynamicLogger::Logger_DoLogginglevels_Test&gt;::CreateTest</FUNCTION>
    <DECORATED>?CreateTest@?$TestFactoryImpl@VLogger_DoLogginglevels_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ</DECORATED>
    <FUNCLINE>472</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>522</LINE>
      <COLUMN>90</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::GetLevelPointerInternal</FUNCTION>
    <DECORATED>?GetLevelPointerInternal@?$Logger@VDefaultDataInterpret@@@@AEBAPEAVLogWriterInterface@@I@Z</DECORATED>
    <FUNCLINE>522</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>522</LINE>
      <COLUMN>120</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::GetLevelPointerInternal</FUNCTION>
    <DECORATED>?GetLevelPointerInternal@?$Logger@VDefaultDataInterpret@@@@AEBAPEAVLogWriterInterface@@I@Z</DECORATED>
    <FUNCLINE>522</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>522</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Logger&lt;DefaultDataInterpret&gt;::GetLevelPointerInternal' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::GetLevelPointerInternal</FUNCTION>
    <DECORATED>?GetLevelPointerInternal@?$Logger@VDefaultDataInterpret@@@@AEBAPEAVLogWriterInterface@@I@Z</DECORATED>
    <FUNCLINE>522</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>346</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::RebuildLevelPointerArray</FUNCTION>
    <DECORATED>?RebuildLevelPointerArray@?$Logger@VDefaultDataInterpret@@@@AEAAXXZ</DECORATED>
    <FUNCLINE>340</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>348</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26482</DEFECTCODE>
    <DESCRIPTION>Only index into arrays using constant expressions (bounds.2).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::RebuildLevelPointerArray</FUNCTION>
    <DECORATED>?RebuildLevelPointerArray@?$Logger@VDefaultDataInterpret@@@@AEAAXXZ</DECORATED>
    <FUNCLINE>340</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>346</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::RebuildLevelPointerArray</FUNCTION>
    <DECORATED>?RebuildLevelPointerArray@?$Logger@VDefaultDataInterpret@@@@AEAAXXZ</DECORATED>
    <FUNCLINE>340</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>348</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26446</DEFECTCODE>
    <DESCRIPTION>Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::RebuildLevelPointerArray</FUNCTION>
    <DECORATED>?RebuildLevelPointerArray@?$Logger@VDefaultDataInterpret@@@@AEAAXXZ</DECORATED>
    <FUNCLINE>340</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>325</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Logger&lt;DefaultDataInterpret&gt;::ExchangeWriters' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::ExchangeWriters</FUNCTION>
    <DECORATED>?ExchangeWriters@?$Logger@VDefaultDataInterpret@@@@AEBAXV?$unique_ptr@VLogWriterInterface@@U?$default_delete@VLogWriterInterface@@@std@@@std@@AEAV23@@Z</DECORATED>
    <FUNCLINE>325</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>394</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Logger&lt;DefaultDataInterpret&gt;::ResetTempString' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::ResetTempString</FUNCTION>
    <DECORATED>?ResetTempString@?$Logger@VDefaultDataInterpret@@@@AEAAXXZ</DECORATED>
    <FUNCLINE>394</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>390</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Logger&lt;DefaultDataInterpret&gt;::ResetStringBuffer' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::ResetStringBuffer</FUNCTION>
    <DECORATED>?ResetStringBuffer@?$Logger@VDefaultDataInterpret@@@@AEAAXXZ</DECORATED>
    <FUNCLINE>390</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>367</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'this-&gt;LevelStatusArray': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::ResetLevelStatusArray</FUNCTION>
    <DECORATED>?ResetLevelStatusArray@?$Logger@VDefaultDataInterpret@@@@AEAAX_N@Z</DECORATED>
    <FUNCLINE>365</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>355</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'this-&gt;LevelPointerArray': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::ResetLevelPointerArray</FUNCTION>
    <DECORATED>?ResetLevelPointerArray@?$Logger@VDefaultDataInterpret@@@@AEAAX_N@Z</DECORATED>
    <FUNCLINE>352</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>357</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'this-&gt;LevelPointerArray': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::ResetLevelPointerArray</FUNCTION>
    <DECORATED>?ResetLevelPointerArray@?$Logger@VDefaultDataInterpret@@@@AEAAX_N@Z</DECORATED>
    <FUNCLINE>352</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>369</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'statusArray' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::SetStatusArray</FUNCTION>
    <DECORATED>?SetStatusArray@?$Logger@VDefaultDataInterpret@@@@AEBAXQEA_NI_N@Z</DECORATED>
    <FUNCLINE>369</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>g:\work\neural net\neuralnet\gclasses\common\</FILEPATH>
      <FILENAME>log.h</FILENAME>
      <LINE>369</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'statusArray': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>372</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::SetStatusArray</FUNCTION>
    <DECORATED>?SetStatusArray@?$Logger@VDefaultDataInterpret@@@@AEBAXQEA_NI_N@Z</DECORATED>
    <FUNCLINE>369</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>369</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Logger&lt;DefaultDataInterpret&gt;::SetStatusArray' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::SetStatusArray</FUNCTION>
    <DECORATED>?SetStatusArray@?$Logger@VDefaultDataInterpret@@@@AEBAXQEA_NI_N@Z</DECORATED>
    <FUNCLINE>369</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>359</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26429</DEFECTCODE>
    <DESCRIPTION>Symbol 'ptrArray' is never tested for nullness, it can be marked as not_null (f.23).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::SetPointerArray</FUNCTION>
    <DECORATED>?SetPointerArray@?$Logger@VDefaultDataInterpret@@@@AEBAXQEAPEAVLogWriterInterface@@IPEAV2@@Z</DECORATED>
    <FUNCLINE>359</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>g:\work\neural net\neuralnet\gclasses\common\</FILEPATH>
      <FILENAME>log.h</FILENAME>
      <LINE>359</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26485</DEFECTCODE>
    <DESCRIPTION>Expression 'ptrArray': No array to pointer decay (bounds.3).</DESCRIPTION>
    <FUNCTION></FUNCTION>
    <DECORATED></DECORATED>
    <FUNCLINE>0</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>362</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::SetPointerArray</FUNCTION>
    <DECORATED>?SetPointerArray@?$Logger@VDefaultDataInterpret@@@@AEBAXQEAPEAVLogWriterInterface@@IPEAV2@@Z</DECORATED>
    <FUNCLINE>359</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>359</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Logger&lt;DefaultDataInterpret&gt;::SetPointerArray' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::SetPointerArray</FUNCTION>
    <DECORATED>?SetPointerArray@?$Logger@VDefaultDataInterpret@@@@AEBAXQEAPEAVLogWriterInterface@@IPEAV2@@Z</DECORATED>
    <FUNCLINE>359</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::IsLoggingLevelEnabled</FUNCTION>
    <DECORATED>??$IsLoggingLevelEnabled@$02@?$Logger@VDefaultDataInterpret@@@@QEBA_NXZ</DECORATED>
    <FUNCLINE>252</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>222</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::DoLoggingLevel</FUNCTION>
    <DECORATED>??$DoLoggingLevel@$02@?$Logger@VDefaultDataInterpret@@@@QEAAX_N@Z</DECORATED>
    <FUNCLINE>219</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::IsLoggingLevelEnabled</FUNCTION>
    <DECORATED>??$IsLoggingLevelEnabled@$01@?$Logger@VDefaultDataInterpret@@@@QEBA_NXZ</DECORATED>
    <FUNCLINE>252</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::IsLoggingLevelEnabled</FUNCTION>
    <DECORATED>??$IsLoggingLevelEnabled@$00@?$Logger@VDefaultDataInterpret@@@@QEBA_NXZ</DECORATED>
    <FUNCLINE>252</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::IsLoggingLevelEnabled</FUNCTION>
    <DECORATED>??$IsLoggingLevelEnabled@$03@?$Logger@VDefaultDataInterpret@@@@QEBA_NXZ</DECORATED>
    <FUNCLINE>252</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::IsLoggingLevelEnabled</FUNCTION>
    <DECORATED>??$IsLoggingLevelEnabled@$04@?$Logger@VDefaultDataInterpret@@@@QEBA_NXZ</DECORATED>
    <FUNCLINE>252</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::IsLoggingLevelEnabled</FUNCTION>
    <DECORATED>??$IsLoggingLevelEnabled@$0O@@?$Logger@VDefaultDataInterpret@@@@QEBA_NXZ</DECORATED>
    <FUNCLINE>252</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>496</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::GetLevelPointer</FUNCTION>
    <DECORATED>??$GetLevelPointer@$00@?$Logger@VDefaultDataInterpret@@@@QEBAPEAVLogWriterInterface@@XZ</DECORATED>
    <FUNCLINE>492</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>496</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::GetLevelPointer</FUNCTION>
    <DECORATED>??$GetLevelPointer@$01@?$Logger@VDefaultDataInterpret@@@@QEBAPEAVLogWriterInterface@@XZ</DECORATED>
    <FUNCLINE>492</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>496</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::GetLevelPointer</FUNCTION>
    <DECORATED>??$GetLevelPointer@$02@?$Logger@VDefaultDataInterpret@@@@QEBAPEAVLogWriterInterface@@XZ</DECORATED>
    <FUNCLINE>492</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>496</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::GetLevelPointer</FUNCTION>
    <DECORATED>??$GetLevelPointer@$0O@@?$Logger@VDefaultDataInterpret@@@@QEBAPEAVLogWriterInterface@@XZ</DECORATED>
    <FUNCLINE>492</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GTests\packages\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\build\native\include\gtest\internal\</FILEPATH>
      <FILENAME>gtest-port.h</FILENAME>
      <LINE>1200</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>testing::internal::scoped_ptr&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$scoped_ptr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@internal@testing@@QEAA@PEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>1200</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>222</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::DoLoggingLevel</FUNCTION>
    <DECORATED>??$DoLoggingLevel@$00@?$Logger@VDefaultDataInterpret@@@@QEAAX_N@Z</DECORATED>
    <FUNCLINE>219</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>222</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26493</DEFECTCODE>
    <DESCRIPTION>Don't use C-style casts (type.4).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::DoLoggingLevel</FUNCTION>
    <DECORATED>??$DoLoggingLevel@$01@?$Logger@VDefaultDataInterpret@@@@QEAAX_N@Z</DECORATED>
    <FUNCLINE>219</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>479</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Logger&lt;DefaultDataInterpret&gt;::UnravelAndSetLoggingLevel' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::UnravelAndSetLoggingLevel</FUNCTION>
    <DECORATED>?UnravelAndSetLoggingLevel@?$Logger@VDefaultDataInterpret@@@@AEAAX_N@Z</DECORATED>
    <FUNCLINE>479</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>G:\Work\Neural Net\NeuralNet\GClasses\Common\</FILEPATH>
      <FILENAME>Log.h</FILENAME>
      <LINE>470</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'Logger&lt;DefaultDataInterpret&gt;::UnravelAndSetLoggingLevel&lt;1&gt;' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>Logger&lt;DefaultDataInterpret&gt;::UnravelAndSetLoggingLevel</FUNCTION>
    <DECORATED>??$UnravelAndSetLoggingLevel@$00@?$Logger@VDefaultDataInterpret@@@@AEAAX_N@Z</DECORATED>
    <FUNCLINE>470</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>