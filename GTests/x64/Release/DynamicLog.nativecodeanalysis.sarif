{
  "version": "2.1.0",
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.4.json",
  "runs": [
    {
      "results": [
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 111,
                  "endLine": 55,
                  "endColumn": 117
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 136,
                  "endLine": 55,
                  "endColumn": 142
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 149,
                  "endLine": 55,
                  "endColumn": 155
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'LogWriterInterface::LogCustom' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 22,
                  "endLine": 55,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 99,
                  "endLine": 57,
                  "endColumn": 105
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 121,
                  "endLine": 57,
                  "endColumn": 127
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'LogWriterInterface::SetCustomLogState' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 22,
                  "endLine": 57,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'LogWriterInterface::IsOutputStreamOpen' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 22,
                  "endLine": 60,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 97,
                  "endLine": 62,
                  "endColumn": 103
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'LogWriterInterface::OpenOutputStream' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 22,
                  "endLine": 62,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'LogWriterInterface::CloseOutputStream' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 22,
                  "endLine": 64,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'LogWriterInterface::FlushOutputStream' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 22,
                  "endLine": 66,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26432",
          "message": {
            "text": "If you define or delete any default operation in the type 'class LogWriterInterface', define or delete them all (c.21)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 18,
                  "endLine": 67,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogMsg' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 22,
                  "endLine": 86,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogMsg' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 22,
                  "endLine": 86,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogVar' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 22,
                  "endLine": 87,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogVar' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 22,
                  "endLine": 87,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogMsgSource' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 22,
                  "endLine": 88,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogMsgSource' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 22,
                  "endLine": 88,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogVarSource' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 22,
                  "endLine": 89,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogVarSource' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 22,
                  "endLine": 89,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogByPartsStart' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 22,
                  "endLine": 91,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogByPartsStart' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 22,
                  "endLine": 91,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogByPartsLvl' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 22,
                  "endLine": 92,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogByPartsLvl' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 22,
                  "endLine": 92,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogByPartsSource' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 22,
                  "endLine": 93,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogByPartsSource' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 22,
                  "endLine": 93,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogByPartsMsg' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 22,
                  "endLine": 94,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogByPartsMsg' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 22,
                  "endLine": 94,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogByPartsVar' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 22,
                  "endLine": 95,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogByPartsVar' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 22,
                  "endLine": 95,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogByPartsFinish' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 22,
                  "endLine": 96,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::LogByPartsFinish' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 22,
                  "endLine": 96,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::IsPassiveLogger' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 22,
                  "endLine": 98,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::IsPassiveLogger' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 22,
                  "endLine": 98,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::IsOutputStreamOpen' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 22,
                  "endLine": 100,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::IsOutputStreamOpen' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 22,
                  "endLine": 100,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::OpenOutputStream' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 22,
                  "endLine": 101,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::OpenOutputStream' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 22,
                  "endLine": 101,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::CloseOutputStream' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 22,
                  "endLine": 102,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::CloseOutputStream' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 22,
                  "endLine": 102,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::FlushOutputStream' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 22,
                  "endLine": 103,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultPassiveLogWriter::FlushOutputStream' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 22,
                  "endLine": 103,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26443",
          "message": {
            "text": "Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 18,
                  "endLine": 104,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26432",
          "message": {
            "text": "If you define or delete any default operation in the type 'class DefaultPassiveLogWriter', define or delete them all (c.21)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 18,
                  "endLine": 104,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26455",
          "message": {
            "text": "Default constructor may not throw. Declare it 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 9,
                  "endLine": 166,
                  "endColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::LogMsg' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 22,
                  "endLine": 179,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::LogVar' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 22,
                  "endLine": 186,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::LogMsgSource' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 22,
                  "endLine": 193,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::LogVarSource' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 22,
                  "endLine": 202,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::LogByPartsStart' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 22,
                  "endLine": 212,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::LogByPartsSource' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 22,
                  "endLine": 217,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::LogByPartsLvl' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 22,
                  "endLine": 225,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::LogByPartsMsg' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 22,
                  "endLine": 233,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::LogByPartsVar' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 22,
                  "endLine": 240,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::LogByPartsFinish' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 22,
                  "endLine": 247,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 13,
                  "endLine": 295,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 38,
                  "endLine": 295,
                  "endColumn": 44
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 51,
                  "endLine": 295,
                  "endColumn": 57
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::LogCustom' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 22,
                  "endLine": 293,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::LogCustom' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 22,
                  "endLine": 293,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 102,
                  "endLine": 298,
                  "endColumn": 108
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 127,
                  "endLine": 298,
                  "endColumn": 133
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::SetCustomLogState' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 22,
                  "endLine": 298,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::SetCustomLogState' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 22,
                  "endLine": 298,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::IsPassiveLogger' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 22,
                  "endLine": 343,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::IsPassiveLogger' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 22,
                  "endLine": 343,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::IsOutputStreamOpen' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 22,
                  "endLine": 344,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::OpenOutputStream' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 22,
                  "endLine": 348,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::CloseOutputStream' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 22,
                  "endLine": 352,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::FlushOutputStream' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 22,
                  "endLine": 356,
                  "endColumn": 22
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26443",
          "message": {
            "text": "Overriding destructor should not use explicit 'override' or 'virtual' specifiers (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 18,
                  "endLine": 360,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26432",
          "message": {
            "text": "If you define or delete any default operation in the type 'class DefaultOperativeLogWriter', define or delete them all (c.21)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 18,
                  "endLine": 360,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26447",
          "message": {
            "text": "The function is declared 'noexcept' but calls function 'TearDown()' which may throw exceptions (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 47,
                  "endLine": 360,
                  "endColumn": 61
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26485",
          "message": {
            "text": "Expression 'str': No array to pointer decay (bounds.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 13,
                  "endLine": 371,
                  "endColumn": 39
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26485",
          "message": {
            "text": "Expression 'str': No array to pointer decay (bounds.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 373,
                  "startColumn": 13,
                  "endLine": 373,
                  "endColumn": 25
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::ResetString' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 21,
                  "endLine": 435,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'DefaultOperativeLogWriter::IncrementEntryIndex' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogWriter.h"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 21,
                  "endLine": 479,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26490",
          "message": {
            "text": "Don't use reinterpret_cast (type.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/LogDataInterpret.h"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 127,
                  "endLine": 81,
                  "endColumn": 164
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26455",
          "message": {
            "text": "Default constructor may not throw. Declare it 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 2,
                  "endLine": 6,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'operator new' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "name": "`dynamic initializer for 'DynamicLogger::Logger_DoLogginglevels_Test::test_info_''",
                  "fullyQualifiedName": "void __cdecl `dynamic initializer for 'private: static class testing::TestInfo * DynamicLogger::Logger_DoLogginglevels_Test::test_info_''(void)",
                  "decoratedName": "??__E?test_info_@Logger_DoLogginglevels_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl<DynamicLogger::Logger_DoLogginglevels_Test>::TestFactoryImpl<DynamicLogger::Logger_DoLogginglevels_Test>' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 2,
                  "endLine": 6,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 2,
                  "endLine": 6,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "name": "`dynamic initializer for 'DynamicLogger::Logger_DoLogginglevels_Test::test_info_''",
                  "fullyQualifiedName": "void __cdecl `dynamic initializer for 'private: static class testing::TestInfo * DynamicLogger::Logger_DoLogginglevels_Test::test_info_''(void)",
                  "decoratedName": "??__E?test_info_@Logger_DoLogginglevels_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 2,
                  "endLine": 6,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 2,
                  "endLine": 6,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26409",
          "message": {
            "text": "Avoid calling new and delete explicitly, use std::make_unique<T> instead (r.11)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 3,
                  "endLine": 11,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 3,
                  "endLine": 12,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 3,
                  "endLine": 14,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 20,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 31,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 3,
                  "endLine": 35,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 3,
                  "endLine": 38,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 3,
                  "endLine": 43,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 3,
                  "endLine": 44,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 3,
                  "endLine": 45,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 3,
                  "endLine": 48,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 3,
                  "endLine": 49,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 3,
                  "endLine": 50,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 3,
                  "endLine": 53,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 3,
                  "endLine": 54,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 3,
                  "endLine": 57,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 3,
                  "endLine": 58,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 3,
                  "endLine": 59,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 3,
                  "endLine": 62,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 3,
                  "endLine": 63,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 3,
                  "endLine": 64,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 3,
                  "endLine": 67,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 3,
                  "endLine": 68,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 3,
                  "endLine": 70,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DynamicLogger::Logger_DoLogginglevels_Test::TestBody' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 2,
                  "endLine": 6,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 3,
                  "endLine": 11,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 3,
                  "endLine": 12,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 3,
                  "endLine": 14,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 20,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 3,
                  "endLine": 21,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 25,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 3,
                  "endLine": 26,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 3,
                  "endLine": 31,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 3,
                  "endLine": 35,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 3,
                  "endLine": 38,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 3,
                  "endLine": 43,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 3,
                  "endLine": 44,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 3,
                  "endLine": 45,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 3,
                  "endLine": 48,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 3,
                  "endLine": 49,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 3,
                  "endLine": 50,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 3,
                  "endLine": 53,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 3,
                  "endLine": 54,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 3,
                  "endLine": 57,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 3,
                  "endLine": 58,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 3,
                  "endLine": 59,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 3,
                  "endLine": 62,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 3,
                  "endLine": 63,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 3,
                  "endLine": 64,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 3,
                  "endLine": 67,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 3,
                  "endLine": 68,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 3,
                  "endLine": 70,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26455",
          "message": {
            "text": "Default constructor may not throw. Declare it 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 2,
                  "endLine": 74,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'operator new' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "name": "`dynamic initializer for 'DynamicLogger::Logger_DoLog_Test::test_info_''",
                  "fullyQualifiedName": "void __cdecl `dynamic initializer for 'private: static class testing::TestInfo * DynamicLogger::Logger_DoLog_Test::test_info_''(void)",
                  "decoratedName": "??__E?test_info_@Logger_DoLog_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl<DynamicLogger::Logger_DoLog_Test>::TestFactoryImpl<DynamicLogger::Logger_DoLog_Test>' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 2,
                  "endLine": 74,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 2,
                  "endLine": 74,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "name": "`dynamic initializer for 'DynamicLogger::Logger_DoLog_Test::test_info_''",
                  "fullyQualifiedName": "void __cdecl `dynamic initializer for 'private: static class testing::TestInfo * DynamicLogger::Logger_DoLog_Test::test_info_''(void)",
                  "decoratedName": "??__E?test_info_@Logger_DoLog_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 2,
                  "endLine": 74,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 2,
                  "endLine": 74,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26409",
          "message": {
            "text": "Avoid calling new and delete explicitly, use std::make_unique<T> instead (r.11)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 3,
                  "endLine": 78,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 3,
                  "endLine": 79,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 3,
                  "endLine": 82,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 3,
                  "endLine": 85,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 3,
                  "endLine": 88,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 3,
                  "endLine": 91,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 3,
                  "endLine": 94,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DynamicLogger::Logger_DoLog_Test::TestBody' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 2,
                  "endLine": 74,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 3,
                  "endLine": 78,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 3,
                  "endLine": 79,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 3,
                  "endLine": 82,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 3,
                  "endLine": 85,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 3,
                  "endLine": 88,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 3,
                  "endLine": 91,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 3,
                  "endLine": 94,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26455",
          "message": {
            "text": "Default constructor may not throw. Declare it 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 2,
                  "endLine": 97,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'operator new' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "name": "`dynamic initializer for 'DynamicLogger::Logger_Construction_Test::test_info_''",
                  "fullyQualifiedName": "void __cdecl `dynamic initializer for 'private: static class testing::TestInfo * DynamicLogger::Logger_Construction_Test::test_info_''(void)",
                  "decoratedName": "??__E?test_info_@Logger_Construction_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl<DynamicLogger::Logger_Construction_Test>::TestFactoryImpl<DynamicLogger::Logger_Construction_Test>' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 2,
                  "endLine": 97,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 2,
                  "endLine": 97,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "name": "`dynamic initializer for 'DynamicLogger::Logger_Construction_Test::test_info_''",
                  "fullyQualifiedName": "void __cdecl `dynamic initializer for 'private: static class testing::TestInfo * DynamicLogger::Logger_Construction_Test::test_info_''(void)",
                  "decoratedName": "??__E?test_info_@Logger_Construction_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 2,
                  "endLine": 97,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 2,
                  "endLine": 97,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26409",
          "message": {
            "text": "Avoid calling new and delete explicitly, use std::make_unique<T> instead (r.11)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 3,
                  "endLine": 101,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 3,
                  "endLine": 103,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 3,
                  "endLine": 104,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 3,
                  "endLine": 106,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 3,
                  "endLine": 107,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 4,
                  "endLine": 111,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 4,
                  "endLine": 112,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 3,
                  "endLine": 115,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 3,
                  "endLine": 116,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 3,
                  "endLine": 117,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 3,
                  "endLine": 118,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 3,
                  "endLine": 119,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 3,
                  "endLine": 120,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 3,
                  "endLine": 123,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 3,
                  "endLine": 124,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 3,
                  "endLine": 125,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 3,
                  "endLine": 126,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DynamicLogger::Logger_Construction_Test::TestBody' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 2,
                  "endLine": 97,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 3,
                  "endLine": 101,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 3,
                  "endLine": 103,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 3,
                  "endLine": 104,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 3,
                  "endLine": 106,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 3,
                  "endLine": 107,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 4,
                  "endLine": 111,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 4,
                  "endLine": 112,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 3,
                  "endLine": 115,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 3,
                  "endLine": 116,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 3,
                  "endLine": 117,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 3,
                  "endLine": 118,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 3,
                  "endLine": 119,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 3,
                  "endLine": 120,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 3,
                  "endLine": 123,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 3,
                  "endLine": 124,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 3,
                  "endLine": 125,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 3,
                  "endLine": 126,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26455",
          "message": {
            "text": "Default constructor may not throw. Declare it 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 2,
                  "endLine": 131,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'operator new' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "name": "`dynamic initializer for 'DynamicLogger::Logger_StaticFunctions_Test::test_info_''",
                  "fullyQualifiedName": "void __cdecl `dynamic initializer for 'private: static class testing::TestInfo * DynamicLogger::Logger_StaticFunctions_Test::test_info_''(void)",
                  "decoratedName": "??__E?test_info_@Logger_StaticFunctions_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl<DynamicLogger::Logger_StaticFunctions_Test>::TestFactoryImpl<DynamicLogger::Logger_StaticFunctions_Test>' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 2,
                  "endLine": 131,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 2,
                  "endLine": 131,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "name": "`dynamic initializer for 'DynamicLogger::Logger_StaticFunctions_Test::test_info_''",
                  "fullyQualifiedName": "void __cdecl `dynamic initializer for 'private: static class testing::TestInfo * DynamicLogger::Logger_StaticFunctions_Test::test_info_''(void)",
                  "decoratedName": "??__E?test_info_@Logger_StaticFunctions_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 2,
                  "endLine": 131,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 2,
                  "endLine": 131,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26409",
          "message": {
            "text": "Avoid calling new and delete explicitly, use std::make_unique<T> instead (r.11)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 3,
                  "endLine": 136,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 3,
                  "endLine": 137,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 3,
                  "endLine": 139,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 3,
                  "endLine": 140,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 3,
                  "endLine": 144,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 3,
                  "endLine": 147,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 3,
                  "endLine": 148,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 3,
                  "endLine": 150,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 3,
                  "endLine": 151,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 3,
                  "endLine": 155,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 3,
                  "endLine": 157,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 3,
                  "endLine": 158,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 3,
                  "endLine": 159,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DynamicLogger::Logger_StaticFunctions_Test::TestBody' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 2,
                  "endLine": 131,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 3,
                  "endLine": 136,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 3,
                  "endLine": 137,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 3,
                  "endLine": 139,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 3,
                  "endLine": 140,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 3,
                  "endLine": 144,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 3,
                  "endLine": 147,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 3,
                  "endLine": 148,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 3,
                  "endLine": 150,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 3,
                  "endLine": 151,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 3,
                  "endLine": 155,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 3,
                  "endLine": 157,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 3,
                  "endLine": 158,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 3,
                  "endLine": 159,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26455",
          "message": {
            "text": "Default constructor may not throw. Declare it 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 2,
                  "endLine": 162,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'operator new' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "name": "`dynamic initializer for 'DynamicLogger::Logger_PointerGettingSetting_Test::test_info_''",
                  "fullyQualifiedName": "void __cdecl `dynamic initializer for 'private: static class testing::TestInfo * DynamicLogger::Logger_PointerGettingSetting_Test::test_info_''(void)",
                  "decoratedName": "??__E?test_info_@Logger_PointerGettingSetting_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::TestFactoryImpl<DynamicLogger::Logger_PointerGettingSetting_Test>::TestFactoryImpl<DynamicLogger::Logger_PointerGettingSetting_Test>' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 2,
                  "endLine": 162,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::GetTestTypeId' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 2,
                  "endLine": 162,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 2
                }
              },
              "logicalLocations": [
                {
                  "name": "`dynamic initializer for 'DynamicLogger::Logger_PointerGettingSetting_Test::test_info_''",
                  "fullyQualifiedName": "void __cdecl `dynamic initializer for 'private: static class testing::TestInfo * DynamicLogger::Logger_PointerGettingSetting_Test::test_info_''(void)",
                  "decoratedName": "??__E?test_info_@Logger_PointerGettingSetting_Test@DynamicLogger@@0QEAVTestInfo@testing@@EA@@YAXXZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::CodeLocation::CodeLocation' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 2,
                  "endLine": 162,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26426",
          "message": {
            "text": "Global initializer calls a non-constexpr function 'testing::internal::MakeAndRegisterTestInfo' (i.22)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 2,
                  "endLine": 162,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26409",
          "message": {
            "text": "Avoid calling new and delete explicitly, use std::make_unique<T> instead (r.11)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 3,
                  "endLine": 170,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 3,
                  "endLine": 171,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 3,
                  "endLine": 173,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 3,
                  "endLine": 174,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 3,
                  "endLine": 183,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 4,
                  "endLine": 186,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 4,
                  "endLine": 187,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 4,
                  "endLine": 188,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 4,
                  "endLine": 191,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 4,
                  "endLine": 198,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 4,
                  "endLine": 201,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 4,
                  "endLine": 206,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 4,
                  "endLine": 209,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 4,
                  "endLine": 214,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 4,
                  "endLine": 217,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 4,
                  "endLine": 224,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 4,
                  "endLine": 225,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 4,
                  "endLine": 230,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 4,
                  "endLine": 231,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 4,
                  "endLine": 237,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C6326",
          "message": {
            "text": "Potential comparison of a constant with another constant."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 4,
                  "endLine": 238,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26462",
          "message": {
            "text": "The value pointed to by 'location1' is assigned only once, mark it as a pointer to const (con.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 22,
                  "endLine": 180,
                  "endColumn": 55
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26462",
          "message": {
            "text": "The value pointed to by 'location2' is assigned only once, mark it as a pointer to const (con.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 22,
                  "endLine": 181,
                  "endColumn": 67
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'DynamicLogger::Logger_PointerGettingSetting_Test::TestBody' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 2,
                  "endLine": 162,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 3,
                  "endLine": 170,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 3,
                  "endLine": 171,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 3,
                  "endLine": 173,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 3,
                  "endLine": 174,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 3,
                  "endLine": 183,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 4,
                  "endLine": 186,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 4,
                  "endLine": 187,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 4,
                  "endLine": 188,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 4,
                  "endLine": 191,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 4,
                  "endLine": 198,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 4,
                  "endLine": 201,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 4,
                  "endLine": 206,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 4,
                  "endLine": 209,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 4,
                  "endLine": 214,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 4,
                  "endLine": 217,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 224,
                  "startColumn": 4,
                  "endLine": 224,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 4,
                  "endLine": 225,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 4,
                  "endLine": 230,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 231,
                  "startColumn": 4,
                  "endLine": 231,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 237,
                  "startColumn": 4,
                  "endLine": 237,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26818",
          "message": {
            "text": "Switch statement does not cover all cases. Consider adding a 'default' label (es.79)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/DynamicLog.cpp"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 4,
                  "endLine": 238,
                  "endColumn": 4
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26409",
          "message": {
            "text": "Avoid calling new and delete explicitly, use std::make_unique<T> instead (r.11)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-internal.h"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "testing::internal::TestFactoryImpl<DynamicLogger::Logger_PointerGettingSetting_Test>::CreateTest",
                  "fullyQualifiedName": "public: virtual class testing::Test * __cdecl testing::internal::TestFactoryImpl<class DynamicLogger::Logger_PointerGettingSetting_Test>::CreateTest(void)",
                  "decoratedName": "?CreateTest@?$TestFactoryImpl@VLogger_PointerGettingSetting_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'testing::internal::TestFactoryImpl<DynamicLogger::Logger_PointerGettingSetting_Test>::CreateTest' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-internal.h"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 17,
                  "endLine": 472,
                  "endColumn": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26409",
          "message": {
            "text": "Avoid calling new and delete explicitly, use std::make_unique<T> instead (r.11)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-internal.h"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "testing::internal::TestFactoryImpl<DynamicLogger::Logger_StaticFunctions_Test>::CreateTest",
                  "fullyQualifiedName": "public: virtual class testing::Test * __cdecl testing::internal::TestFactoryImpl<class DynamicLogger::Logger_StaticFunctions_Test>::CreateTest(void)",
                  "decoratedName": "?CreateTest@?$TestFactoryImpl@VLogger_StaticFunctions_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'testing::internal::TestFactoryImpl<DynamicLogger::Logger_StaticFunctions_Test>::CreateTest' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-internal.h"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 17,
                  "endLine": 472,
                  "endColumn": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26409",
          "message": {
            "text": "Avoid calling new and delete explicitly, use std::make_unique<T> instead (r.11)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-internal.h"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "testing::internal::TestFactoryImpl<DynamicLogger::Logger_Construction_Test>::CreateTest",
                  "fullyQualifiedName": "public: virtual class testing::Test * __cdecl testing::internal::TestFactoryImpl<class DynamicLogger::Logger_Construction_Test>::CreateTest(void)",
                  "decoratedName": "?CreateTest@?$TestFactoryImpl@VLogger_Construction_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'testing::internal::TestFactoryImpl<DynamicLogger::Logger_Construction_Test>::CreateTest' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-internal.h"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 17,
                  "endLine": 472,
                  "endColumn": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26409",
          "message": {
            "text": "Avoid calling new and delete explicitly, use std::make_unique<T> instead (r.11)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-internal.h"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "testing::internal::TestFactoryImpl<DynamicLogger::Logger_DoLog_Test>::CreateTest",
                  "fullyQualifiedName": "public: virtual class testing::Test * __cdecl testing::internal::TestFactoryImpl<class DynamicLogger::Logger_DoLog_Test>::CreateTest(void)",
                  "decoratedName": "?CreateTest@?$TestFactoryImpl@VLogger_DoLog_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'testing::internal::TestFactoryImpl<DynamicLogger::Logger_DoLog_Test>::CreateTest' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-internal.h"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 17,
                  "endLine": 472,
                  "endColumn": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'Logger<DefaultDataInterpret>::GetPassiveLogWriter' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 489,
                  "startColumn": 43,
                  "endLine": 489,
                  "endColumn": 43
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'Logger<DefaultDataInterpret>::GetOperativeLogWriter' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 487,
                  "startColumn": 43,
                  "endLine": 487,
                  "endColumn": 43
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 13,
                  "endLine": 248,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 20,
                  "endLine": 248,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'Logger<DefaultDataInterpret>::IsLoggingEnabled' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 21,
                  "endLine": 242,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 13,
                  "endLine": 234,
                  "endColumn": 45
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 17,
                  "endLine": 236,
                  "endColumn": 77
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 17,
                  "endLine": 238,
                  "endColumn": 75
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 13,
                  "endLine": 234,
                  "endColumn": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 17,
                  "endLine": 236,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 17,
                  "endLine": 238,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26455",
          "message": {
            "text": "Default constructor may not throw. Declare it 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 9,
                  "endLine": 41,
                  "endColumn": 9
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26409",
          "message": {
            "text": "Avoid calling new and delete explicitly, use std::make_unique<T> instead (r.11)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-internal.h"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "testing::internal::TestFactoryImpl<DynamicLogger::Logger_DoLogginglevels_Test>::CreateTest",
                  "fullyQualifiedName": "public: virtual class testing::Test * __cdecl testing::internal::TestFactoryImpl<class DynamicLogger::Logger_DoLogginglevels_Test>::CreateTest(void)",
                  "decoratedName": "?CreateTest@?$TestFactoryImpl@VLogger_DoLogginglevels_Test@DynamicLogger@@@internal@testing@@UEAAPEAVTest@3@XZ",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26433",
          "message": {
            "text": "Function 'testing::internal::TestFactoryImpl<DynamicLogger::Logger_DoLogginglevels_Test>::CreateTest' should be marked with 'override' (c.128)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-internal.h"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 17,
                  "endLine": 472,
                  "endColumn": 17
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 91,
                  "endLine": 522,
                  "endColumn": 121
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 98,
                  "endLine": 522,
                  "endColumn": 121
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'Logger<DefaultDataInterpret>::GetLevelPointerInternal' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 43,
                  "endLine": 522,
                  "endColumn": 43
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 21,
                  "endLine": 346,
                  "endColumn": 77
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26482",
          "message": {
            "text": "Only index into arrays using constant expressions (bounds.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 21,
                  "endLine": 348,
                  "endColumn": 75
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 21,
                  "endLine": 346,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26446",
          "message": {
            "text": "Prefer to use gsl::at() instead of unchecked subscript operator (bounds.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 21,
                  "endLine": 348,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'Logger<DefaultDataInterpret>::ExchangeWriters' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 21,
                  "endLine": 325,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'Logger<DefaultDataInterpret>::ResetTempString' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 21,
                  "endLine": 394,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'Logger<DefaultDataInterpret>::ResetStringBuffer' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 21,
                  "endLine": 390,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26485",
          "message": {
            "text": "Expression 'this->LevelStatusArray': No array to pointer decay (bounds.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 367,
                  "startColumn": 13,
                  "endLine": 367,
                  "endColumn": 78
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26485",
          "message": {
            "text": "Expression 'this->LevelPointerArray': No array to pointer decay (bounds.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 355,
                  "startColumn": 17,
                  "endLine": 355,
                  "endColumn": 111
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26485",
          "message": {
            "text": "Expression 'this->LevelPointerArray': No array to pointer decay (bounds.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 17,
                  "endLine": 357,
                  "endColumn": 109
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26429",
          "message": {
            "text": "Symbol 'statusArray' is never tested for nullness, it can be marked as not_null (f.23)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 21,
                  "endLine": 369,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26485",
          "message": {
            "text": "Expression 'statusArray': No array to pointer decay (bounds.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///g:/work/neural net/neuralnet/gclasses/common/log.h"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 21,
                  "endLine": 369,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 372,
                  "startColumn": 17,
                  "endLine": 372,
                  "endColumn": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'Logger<DefaultDataInterpret>::SetStatusArray' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 369,
                  "startColumn": 21,
                  "endLine": 369,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26429",
          "message": {
            "text": "Symbol 'ptrArray' is never tested for nullness, it can be marked as not_null (f.23)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 21,
                  "endLine": 359,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26485",
          "message": {
            "text": "Expression 'ptrArray': No array to pointer decay (bounds.3)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///g:/work/neural net/neuralnet/gclasses/common/log.h"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 21,
                  "endLine": 359,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26481",
          "message": {
            "text": "Don't use pointer arithmetic. Use span instead (bounds.1)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 362,
                  "startColumn": 17,
                  "endLine": 362,
                  "endColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'Logger<DefaultDataInterpret>::SetPointerArray' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 21,
                  "endLine": 359,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 13,
                  "endLine": 255,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 13,
                  "endLine": 222,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 13,
                  "endLine": 255,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 13,
                  "endLine": 255,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 13,
                  "endLine": 255,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 13,
                  "endLine": 255,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 255,
                  "startColumn": 13,
                  "endLine": 255,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 13,
                  "endLine": 496,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 13,
                  "endLine": 496,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 13,
                  "endLine": 496,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 13,
                  "endLine": 496,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26455",
          "message": {
            "text": "Default constructor may not throw. Declare it 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GTests/packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-port.h"
                },
                "region": {
                  "startLine": 1200,
                  "startColumn": 3,
                  "endLine": 1200,
                  "endColumn": 3
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 13,
                  "endLine": 222,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26493",
          "message": {
            "text": "Don't use C-style casts (type.4)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 13,
                  "endLine": 222,
                  "endColumn": 19
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'Logger<DefaultDataInterpret>::UnravelAndSetLoggingLevel' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 21,
                  "endLine": 479,
                  "endColumn": 21
                }
              }
            }
          ]
        },
        {
          "ruleId": "C26440",
          "message": {
            "text": "Function 'Logger<DefaultDataInterpret>::UnravelAndSetLoggingLevel<1>' can be declared 'noexcept' (f.6)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///G:/Work/Neural Net/NeuralNet/GClasses/Common/Log.h"
                },
                "region": {
                  "startLine": 470,
                  "startColumn": 1,
                  "endLine": 470,
                  "endColumn": 1
                }
              }
            }
          ]
        }
      ],
      "tool": {
        "driver": {
          "name": "PREfast",
          "fullName": "PREfast Code Analysis",
          "version": "14.27.29111.0"
        }
      },
      "invocations": [
        {
          "commandLine": "\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.27.29110\\bin\\HostX86\\x64\\c1xx.dll\" -ACf{1F7B090C-16DB-4822-966A-A93D26ED4681} -ACpmspft140.dll -Alint -D_PREFAST_ -D_AST_FE_ -Analyze -zm0x008D7180 -allChunksReserved -il C:\\Users\\CHRIST~1\\AppData\\Local\\Temp\\_CL_e27643caast -typedil -f DynamicLog.cpp -Ze -D_MSC_EXTENSIONS -Zp16 -pc \\:/ -D_MSC_VER=1927 -D_MSC_FULL_VER=192729111 -D_MSC_BUILD=0 -D_M_AMD64=100 -ZILP448 -D_M_X64=100 -D_WIN64 -D_WIN32 -GR -D_CPPRTTI -I G:\\Work\\Neural Net\\NeuralNet\\GTests\\packages\\Microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3\\build\\native\\include -nologo -W 3 -diagnostics:column -GF -Og -Oi -Ot -Oy -DX64 -DNDEBUG -D_CONSOLE -DCODE_ANALYSIS -D_UNICODE -DUNICODE -EHs -D_CPPUNWIND -EHc -MT -clrNoPureCRT -D_MT -GS -D_M_FP_PRECISE -Zc:wchar_t -Zc:forScope -std:c++17 -Yupch.h -Fpx64\\Release\\GTests.pch -Fox64\\Release\\DynamicLog.obj -Fdx64\\Release\\vc142.pdb -Gd -analyze:projectdirectory G:\\Work\\Neural Net\\NeuralNet\\GTests\\ -analyze:rulesetdirectory ;C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Team Tools\\Static Analysis Tools\\\\Rule Sets; -analyze:ruleset C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Team Tools\\Static Analysis Tools\\Rule Sets\\AllRules.ruleset -analyze:quiet -analyze:plugin C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.27.29110\\bin\\HostX86\\x86\\EspXEngine.dll -FC -errorreport:prompt -I C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.27.29110\\include -I C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.27.29110\\atlmfc\\include -I C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\VS\\include -I C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.19041.0\\ucrt -I C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.19041.0\\um -I C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.19041.0\\shared -I C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.19041.0\\winrt -I C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.19041.0\\cppwinrt -I C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\Include\\um",
          "executionSuccessful": true,
          "ruleConfigurationOverrides": []
        }
      ],
      "artifacts": [
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/dynamiclog.cpp"
          },
          "roles": [
            "analysisTarget",
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/pch.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-death-test-internal.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/custom/gtest-port.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/gtest.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-internal.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-port.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-param-util-generated.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-port-arch.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/gtest-message.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-filepath.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/gtest-printers.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-string.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gclasses/common/logdatainterpret.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-type-util.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/gtest-death-test.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gclasses/common/g_defines.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/gtest-test-part.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/gtest-param-test.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-param-util.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gclasses/common/logdefines.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/gtest-linked_ptr.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gclasses/common/logwriter.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/internal/custom/gtest-printers.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/gtest_prod.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/gtest-typed-test.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gtests/packages/microsoft.googletest.v140.windesktop.msvcstl.static.rt-static.1.8.1.3/build/native/include/gtest/gtest_pred_impl.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gclasses/common/log.h"
          },
          "roles": [
            "resultFile"
          ]
        },
        {
          "location": {
            "uri": "file:///g:/work/neural net/neuralnet/gclasses/common/g_standarttypedefs.h"
          },
          "roles": [
            "resultFile"
          ]
        }
      ]
    }
  ]
}